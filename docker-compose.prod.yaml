networks:
    community-with-legends-dev:
        driver: bridge

volumes:
    community-with-legends-postgres-data:
        name: community-with-legends-postgres-data
    community-with-legends-redis-data:
        name: community-with-legends-redis-data

services:
    app:
        build:
            context: ./environment/dev/app
            dockerfile: Dockerfile
            args:
                - INSTALL_XDEBUG=${DOCKER_INSTALL_XDEBUG:-true}
                - ENABLE_SSL=${DOCKER_ENABLE_SSL:-false}
                - USER_ID=${DOCKER_HOST_USER_ID:-1000}
        container_name: community-with-legends-app-dev
        working_dir: /application
        volumes:
            - ./environment/dev/app/php.ini:/usr/local/etc/php/conf.d/zzz-overrides.ini:ro
            - ./environment/dev/app/php-fpm.conf:/usr/local/etc/php-fpm.d/zzz-overrides.conf:ro
            - ./environment/dev/app/supervisord.conf:/etc/supervisor/custom-supervisord.conf:ro
            - .:/application
            - ./ssl:/etc/nginx/ssl
        ports:
            - ${DOCKER_APP_HOST_PORT:-63851}:80
            - ${DOCKER_SSL_HOST_PORT:-443}:443
            - 8080:8080
        networks:
            - community-with-legends-dev
        restart: unless-stopped
        depends_on:
            database:
                condition: service_healthy

    database:
        image: postgres:16.3-alpine3.18@sha256:64e18e8fb3e9c9aac89ac590c5dd8306b862478404f76cd9b5f7720d012b4c47
        container_name: community-with-legends-db-dev
        environment:
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_DATABASE}
            - PGDATA=/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready --dbname ${DB_DATABASE} --username ${DB_USERNAME}"]
            interval: 3s
            timeout: 3s
            retries: 5
        ports:
            - ${DOCKER_DATABASE_HOST_PORT:-63853}:5432
        volumes:
            - community-with-legends-postgres-data:/var/lib/postgresql/data
        networks:
            - community-with-legends-dev
        restart: unless-stopped

    redis:
        image: redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
        container_name: community-with-legends-redis-dev
        ports:
            - ${DOCKER_REDIS_HOST_PORT:-63852}:6379
        volumes:
            - community-with-legends-redis-data:/data
        networks:
            - community-with-legends-dev
        restart: unless-stopped
